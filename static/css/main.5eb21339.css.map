{"version":3,"file":"static/css/main.5eb21339.css","mappings":"AAYA,iDACE,GACE,gDAGF,GACE,yDANJ,yCACE,GACE,gDAGF,GACE,yDAIJ,oBACE,wBCjBuB,CDkBvB,kBACA,+BACA,aACA,sBACA,QACA,2BACA,kBAGF,0EAGE,mBACA,aACA,UAGF,8EEFE,mBFUA,oCAFA,YACA,kBAEA,aC7CgB,CD8ChB,eEdA,aFeA,cACA,kBEfA,uBFgBA,aAAY,CEzBV,wCFyBF,CGrDA,sCACE,gGHuDA,qCAIJ,oDEVE,WF9CkB,CA4DlB,gBEfA,UFeA,CAGF,0BEjBE,YADA,UF5CiB,CAkEnB,wBACE,0DAGF,8BACE,mBACA,aACA,QACA,iBAGF,oCAGE,6BACA,YACA,eACA,YACA,iBANU,CAOV,YAGF,0BACE,YAAa,CAEb,wBCzFiB,CD0FjB,YACA,WAEA,iCAGE,wBCjGU,CDkGV,WACA,cACA,YE9EA,8BF+EA,sBAIJ,yDAIE,6BACA,YACA,aCjHgB,CDkHhB,eE1FE,6BF0FF,CGtHA,sCACE,qEHwHA,aCnHU,EDuHd,6BACE,gBArHiB,CAsHjB,kBACA,WAxHqB,CA2HvB,oBACE,iBACA,eC1HkB,CD6HpB,iCAGE,6BACA,YACA,eACA,YACA,iBACA,iBAPU,CAQV,WAzIqB,CA4IvB,6BACE,YAAa,CAEb,wBChJiB,CDiJjB,WACA,WAEA,oCAGE,wBCxJU,CDyJV,WACA,cACA,YErIA,8BFsIA,sBAIJ,8BAIE,YAHA,UAEA,kBADA,MAGA,WAnKqB,CAsKvB,qBAKE,YEvIA,SFsIA,iBAEA,WAHA,kBEtIA,QAEA,qEFuIA,CAGF,sBACE,8HACA,gEACA,aACA,kBACA,aACA,UACA,WAxLa,CA0Lb,+CACE,kEIhMJ,kBF2CE,SAFA,kBACA,QAEA","sources":["components/home/Player/Player.module.scss","styles/variables.scss","styles/utils.scss","styles/media.scss","views/Home/Home.module.scss"],"sourcesContent":["@use 'sass:math' as math;\n@use 'src/styles/variables' as vars;\n@use 'src/styles/utils' as utils;\n@use 'src/styles/media' as media;\n\n$arrow-button-size: 54px;\n$play-button-size: 64px;\n$circle-width: 320px;\n$content-padding-left: 12px;\n$progress-track-width: 342px;\n$name-margin-left: 10px;\n\n@keyframes rotateAnimation {\n  0% {\n    transform: rotate(0);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.root {\n  background-color: vars.$color-background-white;\n  border-radius: 8px;\n  box-shadow: 0 4px 4px 0 vars.$color-blue-dark;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 6px 153px 6px $content-padding-left;\n  position: relative;\n}\n\n.soundRow,\n.nameRow,\n.progressRow {\n  align-items: center;\n  display: flex;\n  z-index: 1;\n}\n\n.prevButton,\n.nextButton,\n.playButton {\n  @include utils.set-transition(background-color);\n  @include utils.flex-center;\n\n  border: none;\n  border-radius: 50%;\n  background-color: rgba(vars.$color-green, 0.3);\n  color: vars.$color-blue-dark;\n  cursor: pointer;\n  flex-shrink: 0;\n  font-size: utils.to-rem(28px);\n  line-height: 1;\n\n  @include media.no-touch-hover {\n    background-color: rgba(vars.$color-green, 0.7);\n  }\n}\n\n.prevButton,\n.nextButton {\n  @include utils.set-size($arrow-button-size);\n\n  margin-left: math.div($play-button-size - $arrow-button-size, 2);\n}\n\n.playButton {\n  @include utils.set-size($play-button-size);\n}\n\n.nextIcon {\n  transform: rotate(180deg);\n}\n\n.soundContainer {\n  align-items: center;\n  display: flex;\n  gap: 5px;\n  margin-left: 25px;\n}\n\n.soundTrackContainer {\n  $padding: 8px;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  height: 2px + $padding * 2;\n  padding-block: $padding;\n  width: 260px;\n}\n\n.soundTrack {\n  --progress: 0;\n\n  background-color: vars.$color-gray-light;\n  height: 100%;\n  width: 100%;\n\n  &::before {\n    @include utils.set-transition(width);\n\n    background-color: vars.$color-green;\n    content: \"\";\n    display: block;\n    height: 100%;\n    width: var(--progress);\n  }\n}\n\n.quieterButton,\n.louderButton {\n  @include utils.set-transition(color);\n\n  background-color: transparent;\n  border: none;\n  color: vars.$color-blue-dark;\n  cursor: pointer;\n\n  @include media.no-touch-hover {\n    color: vars.$color-green;\n  }\n}\n\n.nameContainer {\n  margin-left: $name-margin-left;\n  text-align: center;\n  width: $progress-track-width;\n}\n\n.name {\n  font-size: utils.to-rem(24px);\n  font-weight: vars.$font-weight-light;\n}\n\n.progressContainer {\n  $padding: 8px;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  height: 4px + $padding * 2;\n  margin-left: 14px;\n  padding-block: $padding;\n  width: $progress-track-width;\n}\n\n.progressTrack {\n  --progress: 0;\n\n  background-color: vars.$color-gray-light;\n  height: 4px;\n  width: 100%;\n\n  &::before {\n    @include utils.set-transition(width);\n\n    background-color: vars.$color-green;\n    content: \"\";\n    display: block;\n    height: 100%;\n    width: var(--progress);\n  }\n}\n\n.coverContainer {\n  left: $play-button-size + $content-padding-left + $name-margin-left;\n  top: 0;\n  position: absolute;\n  height: 100%;\n  width: $progress-track-width;\n}\n\n.cover {\n  @include utils.absolute-center;\n\n  position: absolute;\n  object-fit: cover;\n  height: 100%;\n  opacity: 0.3;\n}\n\n.circle {\n  animation: rotateAnimation 3s linear infinite;\n  animation-play-state: paused;\n  height: 293px;\n  position: absolute;\n  right: math.div($circle-width, 2) * -1;\n  top: -60px;\n  width: $circle-width;\n\n  &.isRotating {\n    animation-play-state: running;\n  }\n}","// Disable this rule because it don't support Sass module system (I mean `@use`)\n// stylelint-disable primer/no-unused-vars\n\n/* Colors\n ========================================================================== */\n$color-blue-dark: #1c274c;\n$color-background-white: #fffdfd;\n$color-green: #05ac6a;\n$color-gray-light: #c5c6c5;\n\n/* Fonts weights\n ========================================================================== */\n$font-weight-light: 300;\n$font-weight-regular: 400;\n$font-weight-semi-bold: 600;\n$font-weight-bold: 700;\n$font-weight-extra-bold: 800;\n\n/* Base\n ========================================================================== */\n$root-font-size: 16px;\n\n/* Transitions\n ========================================================================== */\n$transition-default-duration: 0.2s !default;\n$transition-default-timing-function: ease-out !default;\n$transition-default: $transition-default-duration $transition-default-timing-function !default;\n\n","@use 'media' as media;\n@use 'variables' as vars;\n\n@function to-rem($size) {\n  @return ($size / vars.$root-font-size) * 1rem;\n}\n\n/**\n    Mixins is used to values for transition CSS property\n\n    Nested brackets because it's a collection.\n    There is no need in nested brackets for a single value, just use: @include utils.setTransition(background-color);\n\n    @example\n    .a {\n      @include utils.setTransition((color, opacity));\n    }\n\n    .a {\n        transition: ...(some default values);\n        transition-property: color, opacity;\n    }\n*/\n@mixin set-transition(\n  $properties: (),\n  $duration: vars.$transition-default-duration,\n  $timing-function: vars.$transition-default-timing-function\n) {\n  @if (length($properties) == 1) {\n    transition: $properties $duration $timing-function;\n  } @else if (length($properties) > 1) {\n    transition: $duration $timing-function;\n    transition-property: $properties;\n  }\n}\n\n@mixin flex-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n@mixin absolute-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@mixin set-size($size) {\n  width: $size;\n  height: $size;\n}","@mixin no-touch-hover {\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      @content;\n    }\n  }\n}","@use 'src/styles/utils' as utils;\n\n.root {\n  @include utils.absolute-center;\n}"],"names":[],"sourceRoot":""}